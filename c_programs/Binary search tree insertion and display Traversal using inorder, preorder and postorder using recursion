#include <stdio.h>
#include <stdlib.h>
struct node {
    int data;
    struct node *left;
    struct node *right;
};
typedef struct node tree;
tree *root = NULL;
void insert(int e)
{
    tree *p, *x;
    if (root == NULL)
    {
        root = (tree *)malloc(sizeof(tree));
        root->data = e;
        root->left = NULL;
        root->right = NULL;
    }
    else
    {
        p = root;
        while (p != NULL)
        {
            x = p;
            if (p->data > e) {

                p = p->left;
            }
            else
            {
                p = p->right;
            }
        }
        if (x->data < e)
        {
            x->right = (tree *)malloc(sizeof(tree));
            x->right->data = e;
            x->right->left = NULL;
            x->right->right = NULL;
        }
        else
        {
            x->left = (tree *)malloc(sizeof(tree));
            x->left->data = e;
            x->left->left = NULL;
            x->left->right = NULL;
        }
    }
}
void inorder(tree *r) {
    if (r != NULL)
    {
        inorder(r->left);
        printf("%d\t", r->data);
        inorder(r->right);
    }
}
void preorder(tree *r) {
    if (r != NULL)
    {
        printf("%d\t", r->data);
        preorder(r->left);
        preorder(r->right);
    }
}
void postorder(tree *r)
{
    if (r != NULL)
    {
        postorder(r->left);
        postorder(r->right);
        printf("%d\t", r->data);
    }
}
int menu() {
    int ch;
    printf("\nInorder-1\nPreorder-2\nPostorder-3\nExit-4\n\nEnter your choice :");
    scanf("%d", &ch);
    return ch;
}
void process() {
    int ch;
    for (ch = menu(); ch != 4; ch = menu())
    {
        switch (ch)
        {
        case 1:

            printf("Inorder Traversal: ");
            inorder(root);
            printf("\n");
            break;
        case 2:
            printf("Preorder Traversal: ");
            preorder(root);
            printf("\n");
            break;
        case 3:
            printf("Postorder Traversal: ");
            postorder(root);
            printf("\n");
            break;
        case 4:
            break;
        default:
            printf("Wrong choice\n");
        }
    }
}
int main() {
    int n,i,data;
    printf("Enter the number of nodes: ");
    scanf("%d", &n);
    for (i = 0; i < n; i++) {
        printf("Enter data for node %d: ", i + 1);
        scanf("%d", &data);
        insert(data);
    }
    process();
    return 0;
}
